class QuickUnion:

  def __init__(self, n):
    self.id = list(range(n))

#chase parent pointer until root is reached
  def root(self, i):
    while i != self.id[i]:
      i = self.id[i]
    return i
    
# if connected by root print True
  def connect(self, p, q):
    return self.root(p) == self.root(q)
    
# make the root of p,q single 
  def union(self, p, q):
    combine_root = self.id[p] = self.id[q]
    print("The union of the root of the numbers is:")
    return combine_root


instance = QuickUnion(5)
print(instance.connect(1,2))
print(instance.union(1, 2))
print(instance.connect(1, 2))

#   same root | different roots
#   2                0    0
#  /                /      \
# 1                1        2
